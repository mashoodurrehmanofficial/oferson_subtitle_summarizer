git add .
git commit -m "latest" 
git push 

cd /home/oferson_subtitle_summarizer/


Github:

cd /home/oferson_subtitle_summarizer/
git pull origin main
ubuntuurrehmanofficial
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


git remote -v
https://www.youtube.com/watch?v=BrVHwQ-SJUA




sudo tail -100  ./log_info.log 

Droplet name = Phone-Directory
ssh root@159.223.158.245
ssh ubuntu@159.223.158.245
roo password = 
pLay@715and

-u ubuntu -p ****

git config --get remote.origin.url
https://github.com/ubuntuurrehmanofficial/xal-lookuppro-django-website.git




python manage.py runserver 0.0.0.0:8000
gunicorn --bind 0.0.0.0:8000 Project.wsgi
sudo apt-get install python3-pip apache2 libapache2-mod-wsgi-py3

/etc/apache2/sites-available/000-default.conf 

<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	# DocumentRoot /var/www/html



	Alias /static /home/oferson_subtitle_summarizer/Static
	<Directory /home/oferson_subtitle_summarizer/Static>

	Require all granted

	</Directory>

	<Directory /home/oferson_subtitle_summarizer/Project>
	<Files wsgi.py>
	Require all granted
	</Files>
	</Directory>

	WSGIDaemonProcess myproject python-home=/home/env python-path=/home/oferson_subtitle_summarizer/

	WSGIProcessGroup myproject
	WSGIScriptAlias / /home/oferson_subtitle_summarizer/Project/wsgi.py

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
</VirtualHost>



sudo nano /etc/systemd/system/gunicorn.service


[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/home/oferson_subtitle_summarizer
ExecStart=/home/env/bin/gunicorn --access-logfile - --workers 3 --bind unix:/home/sock.sock Project.wsgi:application

[Install]
WantedBy=multi-user.target


systemctl daemon-reload
sudo systemctl start gunicorn
sudo systemctl enable gunicorn
sudo systemctl status gunicorn



gunicorn --bind 0.0.0.0:8000 Project.wsgi


sudo uwsgi --socket /home/sock.sock --module Project.wsgi --chmod-socket=664 --uid www-data --gid www-data


sudo apache2ctl configtest

sudo chown root:www-data /root
sudo chown root:www-data /home/








---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
 
sudo nano /etc/nginx/sites-available/oferson_subtitle_summarizer
sudo nano /etc/hosts
[2 LINES removed from  top ]
127.0.1.1 Phone-Directory Phone-Directory
127.0.0.1 localhost


sudo nano /etc/nginx/sites-available/webindex.com
server_name phone21.info www.phone21.info

 
159.223.158.245   phone21.info
159.223.158.245   www.phone21.info
server {
    listen 80;
    server_name 159.223.158.245 phone21.info www.phone21.info;
}



server {
    listen 80;
    server_name 159.223.158.245 ;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /home/oferson_subtitle_summarizer;
    }
    location /Static/ {
        root /home/oferson_subtitle_summarizer;
    }
    location /media/ {
        root /home/oferson_subtitle_summarizer;
    }
    location /Media/ {
        root /home/oferson_subtitle_summarizer;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/home/sock.sock; 
    } 
}

sudo rm /etc/nginx/sites-enabled/oferson_subtitle_summarizer



sudo ln -s /etc/nginx/sites-available/oferson_subtitle_summarizer /etc/nginx/sites-enabled

sudo tail -100 /var/log/nginx/error.log
sudo tail -100 /var/log/nginx/access.log

ps aux | grep -i nginx
sudo ln -s /etc/nginx/sites-available/webindex.com /etc/nginx/sites-enabled/

sudo nginx -t
sudo systemctl restart nginx
nginx -t && nginx -s reload


/etc/apache2/sites-enabled/000-default.conf

sudo certbot --apache -d 159.223.158.245
sudo certbot --nginx -d phone21.info -d www.phone21.info
python3 -m ensurepip --default-pip

sudo apt purge -y python3.10

sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 2

sudo ln -s python3.5 /usr/bin/python3

sudo nano /usr/bin/gnome-terminal


159.223.158.245

3.87.229.103
Administrator
O=hVmf%Dvg7pC45SvZNgkuqs4;kIlCD3

gunicorn --bind 0.0.0.0:8000 Project.wsgi



-- unistall ngnix
sudo apt remove --purge nginx*
sudo apt autoremove
sudo apt update
sudo apt install nginx


sudo apt install python3-dev build-essential
sudo apt install libssl1.1
sudo apt install libssl1.1=1.1.1f-1ubuntu2
sudo apt install libssl-dev
sudo apt install libmysqlclient-dev
pip3 install mysqlclient